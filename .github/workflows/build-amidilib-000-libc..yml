
name: build-amidilib-000-libc
on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'build/**'
      - 'DOCS/**'
      - 'sample_music/**'
      - 'scripts/**'
      - 'images/**'
      - 'extools/**'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-amidilib-000-libc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Installing build prerequisities
        run: |
          echo Update and get build prerequisities
          sudo apt-get update -qq
          sudo apt-get install -y software-properties-common
          sudo apt-get install -y scons upx
      
      - name: Installing VASM
        run: |
          echo Get and install vasm
          wget -q "https://nokturnal.pl/downloads/atari/toolchains/vasm.tar.gz"
          tar -xvf ./vasm.tar.gz
          cd ./vasm
          make -j12 CPU=m68k SYNTAX=mot
          sudo cp ./vasmm68k_mot /usr/bin/
          sudo cp ./vobjdump /usr/bin/
          cd ..

      - name: Installing gcc cross compiler
        run: |
          echo Installing gcc in /opt/cross-mint
          sudo mkdir /opt/cross-mint
          sudo chgrp users /opt/cross-mint
          sudo chmod 775 /opt/cross-mint
          wget -q "https://nokturnal.pl/downloads/atari/toolchains/m68k-atari-mint-base-20200501-linux64.tar.xz"
          tar -C /opt/cross-mint/ --strip-components=1 -xf ./m68k-atari-mint-base-20200501-linux64.tar.xz
          
      - name: Clean AMIDILIB release (libc) version
        run: |
          cd ./src
          scons --sconstruct=SConstruct_000_release -c
          cd ..

      - name: Build AMIDILIB release (libc) version
        run: |
          cd ./src
          scons --sconstruct=SConstruct_000_release
          cd ../
      
      - name: Clean AMIDILIB debug (libc) version
        run: |
          cd ./src
          scons --sconstruct=SConstruct_000_debug -c
          cd ..

      - name: Build AMIDILIB debug (libc) version
        run: |
          cd ./src
          scons --sconstruct=SConstruct_000_debug
          cd ../

      - name: Create binary archive
        run: |
          tar -czvf amidilib-000-release.tgz --exclude=*.o --exclude=*{/common,/tos} -C ./build/aout/release/ .
          tar -czvf amidilib-000-debug.tgz --exclude=*.o --exclude=*{/common,/tos} -C ./build/aout/debug/ .

      - name: Upload AMIDILIB (libc) archive
        uses: actions/upload-artifact@v3
        with:
          name: amidilib-000-libc
          path: ./amidilib-*.tgz
          
