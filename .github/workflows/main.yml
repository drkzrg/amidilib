
name: amidilib-build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-atari-target:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a set of commands using the runners shell
      - name: Installing build prerequisities
        run: |
          echo Update and get build prerequisities
          sudo apt-get update -qq
          sudo apt-get install -y software-properties-common
          sudo apt-get install -y scons upx
      - name: Installing VASM
        run: |
          echo Get and install vasm
          wget -q "https://nokturnal.pl/downloads/atari/toolchains/vasm.tar.gz"
          tar -xvf ./vasm.tar.gz
          cd ./vasm
          make -j12 CPU=m68k SYNTAX=mot
          sudo cp ./vasmm68k_mot /usr/bin/
          sudo cp ./vobjdump /usr/bin/
          cd ..
        - name: Installing libcmini
        run: |
          echo Installing libcmini ...
          mkdir ./libcmini
          cd ./libcmini
          wget -q -O - "https://github.com/freemint/libcmini/releases/download/v0.54/libcmini-0.54.tar.gz" | tar xzf -
          echo TODO build libcmini
          cd ..
      - name: Installing gcc minimal startup
        run: |
          echo Getting latest gcc minimal startup
          sudo chmod +x ./getLatestStartup.sh
          ./getLatestStartup.sh
      - name: Installing gcc cross compiler
        run: |
          echo Installing gcc in /opt/cross-mint
          sudo mkdir /opt/cross-mint
          sudo chgrp users /opt/cross-mint
          sudo chmod 775 /opt/cross-mint
          wget -q "https://nokturnal.pl/downloads/atari/toolchains/m68k-atari-mint-base-20200501-linux64.tar.xz"
          tar -C /opt/cross-mint/ --strip-components=1 -xf ./m68k-atari-mint-base-20200501-linux64.tar.xz
        run: cd ./src
      
      - name: Clean
        run: scons --sconstruct=SConstruct_release -c
      
      - name: Build library
        run: scons --sconstruct=SConstruct_release
      
      - name: Update program extensions
        run: |
          mv ../build/aout/release/mid2nkt.tos ../build/aout/release/mid2nkt.ttp 
          mv ../build/aout/release/nktrep.tos ../build/aout/release/nktrep.ttp
          mv ../build/aout/release/midiplay.tos ../build/aout/release/midiplay.ttp
      
      - name: Create distribution archive
        run: tar -czvf amidilib.tgz --exclude=*.o --exclude=*{/common,/tos} -C ../build/aout/release/ .
      
      - name: Upload archive
        uses: actions/upload-artifact@v3
        with:
          name: amidilib-build-release
          path: amidilib.tgz
      
